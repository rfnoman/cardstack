"use strict";(()=>{var e={};e.id=235,e.ids=[235],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},39774:(e,r,s)=>{s.r(r),s.d(r,{headerHooks:()=>h,originalPathname:()=>f,patchFetch:()=>y,requestAsyncStorage:()=>x,routeModule:()=>m,serverHooks:()=>w,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>q});var t={};s.r(t),s.d(t,{DELETE:()=>p,GET:()=>l});var a=s(95419),n=s(69108),i=s(99678),o=s(81355),d=s(82002),u=s(18138),c=s(98984);async function p(e,{params:r}){try{let e=await (0,o.getServerSession)(d.L);if(!e?.user?.id)return c.NextResponse.json({message:"Unauthorized"},{status:401});let s=await u.db.card.findUnique({where:{id:r.cardId}});if(!s)return c.NextResponse.json({message:"Card not found"},{status:404});if(s.ownerId!==e.user.id)return c.NextResponse.json({message:"Forbidden"},{status:403});return await u.db.card.delete({where:{id:r.cardId}}),new c.NextResponse(null,{status:204})}catch(e){return console.error("Error deleting card:",e),c.NextResponse.json({message:"Something went wrong!"},{status:500})}}async function l(e,{params:r}){try{let e=await (0,o.getServerSession)(d.L);if(!e?.user?.id)return c.NextResponse.json({message:"Unauthorized"},{status:401});let s=await u.db.card.findUnique({where:{id:r.cardId,OR:[{ownerId:e.user.id},{sharedWith:{some:{id:e.user.id}}}]},include:{owner:{select:{name:!0,email:!0}}}});if(!s)return c.NextResponse.json({message:"Card not found"},{status:404});return c.NextResponse.json(s)}catch(e){return console.error("Error fetching card:",e),c.NextResponse.json({message:"Something went wrong!"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/cards/[cardId]/route",pathname:"/api/cards/[cardId]",filename:"route",bundlePath:"app/api/cards/[cardId]/route"},resolvedPagePath:"/Users/noman/Desktop/winsurf-playground/cards/src/app/api/cards/[cardId]/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:x,staticGenerationAsyncStorage:g,serverHooks:w,headerHooks:h,staticGenerationBailout:q}=m,f="/api/cards/[cardId]/route";function y(){return(0,i.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:g})}},82002:(e,r,s)=>{s.d(r,{L:()=>o});var t=s(65822),a=s(86485),n=s(6521),i=s(18138);let o={adapter:(0,t.N)(i.db),session:{strategy:"jwt"},pages:{signIn:"/login"},providers:[(0,a.Z)({name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;let r=await i.db.user.findUnique({where:{email:e.email}});return r&&await (0,n.compare)(e.password,r.password)?{id:r.id,email:r.email,name:r.name}:null}})],callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id),e),session:async({session:e,token:r})=>(r&&e.user&&(e.user.id=r.id),e)}}},18138:(e,r,s)=>{let t;s.d(r,{db:()=>t}),t=new(require("@prisma/client")).PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[638,393,155,791],()=>s(39774));module.exports=t})();