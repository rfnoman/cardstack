"use strict";(()=>{var e={};e.id=164,e.ids=[164],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},51459:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>g,originalPathname:()=>h,patchFetch:()=>f,requestAsyncStorage:()=>m,routeModule:()=>c,serverHooks:()=>w,staticGenerationAsyncStorage:()=>x,staticGenerationBailout:()=>q});var a={};t.r(a),t.d(a,{PUT:()=>l});var s=t(95419),i=t(69108),n=t(99678),o=t(98984),d=t(81355),u=t(18138),p=t(82002);async function l(e,{params:r}){try{let t=await (0,d.getServerSession)(p.L);if(!t?.user?.email)return new o.NextResponse("Unauthorized",{status:401});let{imageUrl:a}=await e.json();if(!a)return new o.NextResponse("Image URL is required",{status:400});let s=await u.db.card.findUnique({where:{id:r.cardId},include:{owner:!0}});if(!s)return new o.NextResponse("Card not found",{status:404});if(s.owner.email!==t.user.email)return new o.NextResponse("Unauthorized",{status:401});let i=await u.db.card.update({where:{id:r.cardId},data:{imageUrl:a}});return o.NextResponse.json(i)}catch(e){return console.error("Error updating card image:",e),new o.NextResponse("Internal Server Error",{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/cards/[cardId]/image/route",pathname:"/api/cards/[cardId]/image",filename:"route",bundlePath:"app/api/cards/[cardId]/image/route"},resolvedPagePath:"/Users/noman/Desktop/winsurf-playground/cards/src/app/api/cards/[cardId]/image/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:x,serverHooks:w,headerHooks:g,staticGenerationBailout:q}=c,h="/api/cards/[cardId]/image/route";function f(){return(0,n.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:x})}},82002:(e,r,t)=>{t.d(r,{L:()=>o});var a=t(65822),s=t(86485),i=t(6521),n=t(18138);let o={adapter:(0,a.N)(n.db),session:{strategy:"jwt"},pages:{signIn:"/login"},providers:[(0,s.Z)({name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;let r=await n.db.user.findUnique({where:{email:e.email}});return r&&await (0,i.compare)(e.password,r.password)?{id:r.id,email:r.email,name:r.name}:null}})],callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id),e),session:async({session:e,token:r})=>(r&&e.user&&(e.user.id=r.id),e)}}},18138:(e,r,t)=>{let a;t.d(r,{db:()=>a}),a=new(require("@prisma/client")).PrismaClient}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[638,393,155,791],()=>t(51459));module.exports=a})();